name: 🔍 Recon Scan with Custom Domain

on:
  workflow_dispatch:
    inputs:
      domain:
        description: 'Enter the target domain (e.g. example.com)'
        required: true

env:
  OUTPUT_DIR: /output

jobs:
  recon:
    runs-on: ubuntu-latest
    container:
      image: drakon56/recon-suite:v2
      volumes:
        - /home/runner:/output

    steps:
      - name: 🖨️ Set Domain Variable
        run: echo "DOMAIN=${{ github.event.inputs.domain }}" >> $GITHUB_ENV

      - name: 📁 Create Output Directory
        run: mkdir -p $OUTPUT_DIR/data

      - name: 🔍 Subdomain Enumeration (Subfinder)
        run: |
          subfinder -d $DOMAIN -silent -o $OUTPUT_DIR/data/subdomains.txt

      - name: 🚨 Subdomain Takeover Detection (Subzy)
        run: |
          subzy run --targets $OUTPUT_DIR/data/subdomains.txt \
            --hide_fails --timeout 10 --concurrency 50 > $OUTPUT_DIR/data/subzy.txt || true

      - name: 🌐 Check Alive Domains (httpx)
        run: |
          httpx -l $OUTPUT_DIR/data/subdomains.txt -silent -mc 200,301,302 > $OUTPUT_DIR/data/alive.txt

      - name: 📜 Collect URLs from Gau for all alive subdomains
        run: |
          cat $OUTPUT_DIR/data/alive.txt | gau -t 5 -o $OUTPUT_DIR/data/waybackurls.txt || echo "gau failed"

      - name: 🔥 Run CORS Scanner (Corsy)
        run: |
          corsy -i $OUTPUT_DIR/data/alive.txt -o $OUTPUT_DIR/data/corsy.json || echo "Corsy failed"

      - name: 📦 Upload Recon Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: recon-results-${{ github.event.inputs.domain }}
          path: ${{ env.OUTPUT_DIR }}/data/
          if-no-files-found: warn
          compression-level: 6
          overwrite: false
          include-hidden-files: false

